{"ast":null,"code":"let initialState = 0;\nconst ADD = 'ADD';\nconst REMOVE = 'REMOVE';\nconst CHANGE = 'CHANGE';\nexport const basketPrice = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_PRICE\":\n      return state;\n    case \"SET_PRICE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","ADD","REMOVE","CHANGE","basketPrice","state","arguments","length","undefined","action","type","payload"],"sources":["/Users/nikitamoussa/Documents/aroma-project/src/index/basketReducer/basketPrice.js"],"sourcesContent":["let initialState = 0;\r\n\r\nconst ADD = 'ADD';\r\nconst REMOVE = 'REMOVE';\r\nconst CHANGE = 'CHANGE'\r\n\r\nexport const basketPrice = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_PRICE\":\r\n            return state\r\n        case \"SET_PRICE\":\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,IAAIA,YAAY,GAAG,CAAC;AAEpB,MAAMC,GAAG,GAAG,KAAK;AACjB,MAAMC,MAAM,GAAG,QAAQ;AACvB,MAAMC,MAAM,GAAG,QAAQ;AAEvB,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAOL,KAAK;IAChB,KAAK,WAAW;MACZ,OAAOI,MAAM,CAACE,OAAO;IACzB;MACI,OAAON,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}