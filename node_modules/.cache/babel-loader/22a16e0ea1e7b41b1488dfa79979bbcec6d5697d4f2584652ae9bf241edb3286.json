{"ast":null,"code":"let initialState = [];\nconst ADD = 'ADD';\nconst REMOVE = 'REMOVE';\nexport const basketReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD:\n      return [...state, action.payload];\n    case REMOVE:\n      return state.filter(item => item.id !== action.payload.id);\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","ADD","REMOVE","basketReducer","state","arguments","length","undefined","action","type","payload","filter","item","id"],"sources":["D:/projects/aroma-project/src/index/basketReducer/basketReducer.js"],"sourcesContent":["let initialState = [];\r\n\r\nconst ADD = 'ADD';\r\nconst REMOVE = 'REMOVE';\r\n\r\nexport const basketReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD:\r\n            return [\r\n                ...state,\r\n                action.payload\r\n            ]\r\n        case REMOVE:\r\n            return state.filter(item => item.id !== action.payload.id)\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,IAAIA,YAAY,GAAG,EAAE;AAErB,MAAMC,GAAG,GAAG,KAAK;AACjB,MAAMC,MAAM,GAAG,QAAQ;AAEvB,OAAO,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKR,GAAG;MACJ,OAAO,CACH,GAAGG,KAAK,EACRI,MAAM,CAACE,OAAO,CACjB;IACL,KAAKR,MAAM;MACP,OAAOE,KAAK,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,CAAC;IAC9D;MACI,OAAOT,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}